input {
    beats {
        port => 5454
        ssl => true
        ssl_certificate => "/etc/logstash/logstash.crt"
        ssl_certificate_authorities => ["/etc/logstash/ca.crt"]
        ssl_key => "/etc/logstash/logstash.key.pkcs8"
        ssl_verify_mode => "force_peer"
    }
}

filter {
    prune {
        whitelist_names => ["@timestamp", "group", "id", "message", "name", "passed", "type", "score_weight", "details"]
    }
    if [passed] {
        mutate {
            add_field => {"[passed_int]" => "1"}
        }
    } else {
        mutate {
            add_field => {"[passed_int]" => "0"}
        }
    }
    mutate {
        convert => {"passed_int" => "integer"}
    }
    ruby {
        code => "event.set('epoch', event.get('@timestamp').to_i)"
    }
    clone {
        clones => ["dynamicbeat"]
        add_tag => ["generic"]
        remove_field => ["message", "details"]
    }
    if "generic" in [tags] {
        mutate {
            id => "mutateClonedCheck"
            add_field => {"[@metadata][target_index]" => "results-all-%{+YYYY.MM.dd}"}
        }
    } else {
        clone {
            clones => ["dynamicbeat"]
            add_tag => ["admin"]
        }
        if "admin" in [tags] {
            mutate {
                add_field => {"[@metadata][target_index]" => "results-admin-%{+YYYY.MM.dd}"}
            }
        } else {
            mutate {
                add_field => {"[@metadata][target_index]" => "results-%{[group]}-%{+YYYY.MM.dd}"}
            }
        }
    }
}

output {
    elasticsearch {
        user => "logstash"
        password => "{{ logstash_password }}"
        cacert => "/etc/logstash/ca.crt"
        hosts => "https://elasticsearch4:9200"
        ssl => true
        index => "%{[@metadata][target_index]}"
    }
}
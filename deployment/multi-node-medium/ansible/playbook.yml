---
- name: General setup
  hosts: all
  become: yes
  tasks:

    - name: Add entries to /etc/hosts
      lineinfile:
        path: /etc/hosts
        line: "{{ item.ip }}{{ item.hostname }}"
      loop:
        - { ip: "{{ nginx_internal_ip }}", hostname: "nginx" }
        - { ip: "{{ logstash_ip }}", hostname: "logstash" }
        - { ip: "{{ kibana_ip }}", hostname: "kibana" }
        - { ip: "{{ elasticsearch1_ip }}", hostname: "elasticsearch1" }
        - { ip: "{{ elasticsearch2_ip }}", hostname: "elasticsearch2" }
        - { ip: "{{ elasticsearch3_ip }}", hostname: "elasticsearch3" }
        - { ip: "{{ elasticsearch4_ip }}", hostname: "elasticsearch4" }

    - name: Create directory for root CA certificate
      file:
        path: /etc/ssl/certs
        state: directory

    - name: Copy root CA certificate
      copy:
        src: certificates/ca/ca.crt
        dest: /etc/ssl/certs/scorestack.crt

- name: Install Java
  hosts: elasticsearch:logstash
  become: yes
  tasks:

    - name: Install Default JRE
      apt:
        name: default-jre
        state: present
        update_cache: yes

###############################################################################
# ELASTICSEARCH
###############################################################################

- name: Install Elasticsearch
  hosts: elasticsearch
  become: yes
  tasks:

    - name: Install Elasticsearch package
      apt:
        deb: https://artifacts.elastic.co/downloads/elasticsearch/elasticsearch-7.5.1-amd64.deb

    - name: Configure JVM
      template:
        src: configs/elasticsearch.jvm.options
        dest: /etc/elasticsearch/jvm.options
        owner: root
        group: elasticsearch
        mode: '0660'

    - name: Configure limits
      pam_limits:
        domain: elasticsearch
        limit_item: "{{ item.item }}"
        limit_type: "-"
        value: "{{ item.value }}"
      loop:
        - { item: "nofile", value: "65535" }
        - { item: "nproc", value: "4096" }

    - name: Increase memory limits
      sysctl:
        name: vm.max_map_count
        sysctl_set: yes
        value: 262144

    - name: Copy certificate
      copy:
        src: certificates/{{ inventory_hostname }}/{{ inventory_hostname }}.crt
        dest: /etc/elasticsearch/{{ inventory_hostname }}.crt
        owner: root
        group: elasticsearch
        mode: '0660'

    - name: Copy key
      copy:
        src: certificates/{{ inventory_hostname }}/{{ inventory_hostname }}.key
        dest: /etc/elasticsearch/{{ inventory_hostname }}.key
        owner: root
        group: elasticsearch
        mode: '0660'

- name: Configure master-eligible nodes
  hosts: master
  become: yes
  tasks:

    - name: Configure Elasticsearch
      template:
        src: configs/elasticsearch.yml
        dest: /etc/elasticsearch/elasticsearch.yml
        owner: root
        group: elasticsearch
      notify:
        - Restart Elasticsearch

    - name: Check if elastic user password is set
      uri:
        url: https://elasticsearch1:9200/_cluster/health
        url_username: elastic
        url_password: "{{ elastic_password }}"
        validate_certs: no
      ignore_errors: yes
      register: bootstrap_req
      when: inventory_hostname == "elasticsearch1"

    - name: Set elastic user password
      block:
        - name: Stop Elasticsearch
          systemd:
            name: elasticsearch
            state: stopped

        - name: Set bootstrap password
          shell: "echo {{ bootstrap_password }} | /usr/share/elasticsearch/bin/elasticsearch-keystore add bootstrap.password --stdin"

        - name: Set elastic user password
          uri:
            url: https://elasticsearch1:9200/_xpack/security/user/elastic/_password
            body: '{"password": "{{ elastic_password }}"}'
            body_format: json
            method: PUT
            url_username: "elastic"
            url_password: "{{ bootstrap_password }}"
            validate_certs: no
          notify:
            - Restart Elasticsearch
      when: bootstrap_req.status == 401

    - name: Enable Elasticsearch service
      systemd:
        name: elasticsearch
        enabled: yes

  handlers:

    - name: Restart Elasticsearch
      systemd:
        name: elasticsearch
        state: restarted

- name: Configure coordinating-only node
  hosts: coordinating
  become: yes
  tasks:

    - name: Configure Elasticsearch
      template:
        src: configs/coordinator.yml
        dest: /etc/elasticsearch/elasticsearch.yml
        owner: root
        group: elasticsearch
      notify:
        - Restart Elasticsearch

    - name: Enable Elasticsearch service
      systemd:
        name: elasticsearch
        enabled: yes

  handlers:

    - name: Restart Elasticsearch
      systemd:
        name: elasticsearch
        state: restarted

###############################################################################
# USERS
###############################################################################

- name: Set up internal users
  hosts: nginx
  tasks:

    - name: Wait for cluster status to be green
      uri:
        url: "https://elasticsearch4:9200/_cluster/health?wait_for_status=green&timeout=1m"
        timeout: 60
        url_username: elastic
        url_password: "{{ elastic_password }}"
        validate_certs: no
      changed_when: no

    - name: Set internal user passwords
      uri:
        url: "https://elasticsearch4:9200/_xpack/security/user/{{ item.username }}/_password"
        body: '{"password": "{{ item.password }}"}'
        body_format: json
        method: PUT
        url_username: elastic
        url_password: "{{ elastic_password }}"
        validate_certs: no
      loop:
        - { user_name: "kibana", user_password: "{{ kibana_password }}" }
        - { user_name: "logstash", user_password: "{{ logstash_password }}" }
      changed_when: no

###############################################################################
# LOGSTASH
###############################################################################

- name: Install Logstash
  hosts: logstash
  become: yes
  tasks:

    - name: Install Logstash package
      apt:
        deb: https://artifacts.elastic.co/downloads/logstash/logstash-7.5.1.deb

    - name: Configure Logstash
      copy:
        src: configs/logstash.yml
        dest: /etc/logstash/logstash.yml
      notify:
        - Restart Logstash

    - name: Configure JVM
      template:
        src: configs/logstash.jvm.options
        dest: /etc/logstash/jvm.options
      notify:
        - Restart Logstash

    - name: Configure Dynamicbeat pipeline
      copy:
        src: config/dynamicbeat-pipeline.conf
        dest: /etc/logstash/conf.d/dynamicbeat-pipeline.conf
      notify:
        - Restart Logstash

    - name: Copy certificate
      copy:
        src: certificates/{{ inventory_hostname }}/{{ inventory_hostname }}.crt
        dest: /etc/logstash/{{ inventory_hostname }}.crt
      notify:
        - Restart Logstash

    - name: Copy key
      copy:
        src: certificates/{{ inventory_hostname }}/{{ inventory_hostname }}.key
        dest: /etc/logstash/{{ inventory_hostname }}.key
        mode: '0600'
      notify:
        - Restart Logstash

    - name: Create directory for Logstash keystore
      file:
        path: /usr/share/logstash/config
        state: directory
        owner: logstash
        group: logstash

    - name: Create Logstash keystore
      shell: "yes y | /usr/share/logstash/bin/logstash-keystore create"
      args:
        creates: /usr/share/logstash/config/logstash.keystore
      register: result
      until: result.failed != true

    - name: Check if Logstash password has been added to the keystore
      command: /usr/share/logstash/bin/logstash-keystore list
      changed_when: no
      register: logstash_keystore_keys

    - name: Add Logstash password
      shell: "echo {{ logstash_password }} | /usr/share/logstash/bin/logstash-keystore add elasticsearch.password --stdin"
      when: '"elasticsearch.password" not in logstash_keystore_keys.stdout'
      notify:
        - Restart Logstash

    - name: Enable Logstash service
      systemd:
        name: logstash
        enabled: yes

  handlers:

    - name: Restart Logstash
      systemd:
        name: logstash
        state: restarted

###############################################################################
# KIBANA
###############################################################################

- name: Install Kibana
  hosts: kibana
  become: yes
  tasks:

    - name: Install Kibana package
      apt:
        deb: https://artifacts.elastic.co/downloads/kibana/kibana-7.5.1-amd64.deb

    - name: Configure Kibana
      copy:
        src: configs/kibana.yml
        dest: /etc/kibana/kibana.yml
      notify:
        - Restart Kibana

    - name: Copy certificate
      copy:
        src: certificates/{{ inventory_hostname }}/{{ inventory_hostname }}.crt
        dest: /etc/logstash/{{ inventory_hostname }}.crt
      notify:
        - Restart Kibana

    - name: Copy key
      copy:
        src: certificates/{{ inventory_hostname }}/{{ inventory_hostname }}.key
        dest: /etc/logstash/{{ inventory_hostname }}.key
        mode: 0600
      notify:
        - Restart Kibana

    - name: Install plugin
      command: /usr/share/kibana/bin/kibana-plugin --allow-root install https://tinyurl.com/scorestack-kibana-plugin
      args:
        creates: /usr/share/kibana/plugins/scorestack
      notify:
        - Restart Kibana

    - name: Create Kibana keystore
      command: /usr/share/kibana/bin/kibana-keystore --allow-root create
      args:
        creates: /var/lib/kibana/kibana.keystore
      notify:
        - Restart Kibana
      
    - name: Check if Kibana password has been added to the keystore
      command: /usr/share/kibana/bin/kibana-keystore --allow-root list
      changed_when: no
      register: kibana_keystore_keys

    - name: Add Kibana password
      shell: "echo {{ kibana_password }} | /usr/share/kibana/bin/kibana-keystore --allow-root add elasticsearch.password --stdin"
      when: '"elasticsearch.password" not in kibana_keystore_keys.stdout'

    - name: Enable Kibana service
      systemd:
        name: kibana
        enabled: yes

  handlers:

    - name: Restart Kibana
      systemd:
        name: kibana
        state: restarted

###############################################################################
# NGINX
###############################################################################

- name: Install Nginx
  hosts: nginx
  become: yes
  tasks:

    - name: Install Nginx package
      apt:
        name: Nginx
        state: present
        update_cache: yes

    - name: Configure Nginx
      copy:
        src: configs/nginx.conf
        dest: /etc/nginx/nginx.conf
      notify:
        - Restart Nginx

    - name: Configure Nginx server blocks
      template:
        src: "configs/{{ item }}"
        dest: "/etc/nginx/conf.d/{{ item }}"
      loop:
        - elasticsearch.conf
        - kibana.conf
        - logstash.conf
      notify:
        - Restart Nginx

    - name: Copy certificate
      copy:
        src: certificates/{{ inventory_hostname }}/{{ inventory_hostname }}.crt
        dest: /etc/nginx/{{ inventory_hostname }}.crt
      notify:
        - Restart Nginx

    - name: Copy key
      copy:
        src: certificates/{{ inventory_hostname }}/{{ inventory_hostname }}.key
        dest: /etc/nginx/{{ inventory_hostname }}.key
        mode: 0600
      notify:
        - Restart Nginx

    - name: Enable Nginx
      systemd:
        name: nginx
        enabled: yes

  handlers:

    - name: Restart Nginx
      systemd:
        name: nginx
        state: restarted
input {
    beats {
        id => "dynamicbeatInput"
        port => 5454
        ssl => true
        ssl_certificate => "/usr/share/logstash/config/pki/logs.cert.pem"
        ssl_certificate_authorities => ["/usr/share/logstash/config/pki/ca.cert.pem"]
        ssl_key => "/usr/share/logstash/config/pki/logs.key.pkcs8"
        ssl_verify_mode => "force_peer"
    }
}

filter {
    prune {
        id => "mutateRemoveExtraFields"
        whitelist_names => ["@timestamp", "group", "id", "message", "name", "passed", "type", "score_weight"]
    }
    clone {
        id => "cloneCheck"
        clones => ["dynamicbeat"]
        add_tag => ["generic"]
        remove_field => ["message", "details"]
    }
    if "generic" in [tags] {
        clone {
            id => "cloneGenericCheck"
            clones => ["dynamicbeat"]
            add_tag => ["score"]
        }
        mutate {
            id => "mutateClonedCheck"
            add_field => {"[@metadata][target_index]" => "results-all-%{+YYYY.MM.dd}"}
        }
    } else {
        mutate {
            id => "mutateOriginalCheck"
            add_field => {"[@metadata][target_index]" => "results-%{[group]}-%{+YYYY.MM.dd}"}
        }
    }
    if "score" in [tags] {
        mutate {
            id => "mutateScoreCheck"
            add_field => {"[@metadata][target_index]" => "intermediate-scores-${+YYYY.MM.dd}"}
        }
    }
}

output {
    elasticsearch {
        id => "elasticsearchOutput"
        user => "logstash_internal"
        password => "${ELASTICSEARCH_PASSWORD}"
        cacert => "/usr/share/logstash/config/pki/ca.cert.pem"
        hosts => "https://elas01:9200"
        ssl => true
        index => "%{[@metadata][target_index]}"
    }
}